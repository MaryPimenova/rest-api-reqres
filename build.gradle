plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}


def selenideVersion = "6.13.0",
    jUnitVersion = "5.9.3",
    slf4jVersion = "2.0.7",
    restAssuredVersion = "5.3.0",
    allureVersion = "2.19.0",
    ownerVersion = "1.0.12"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$jUnitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:3.24.2",
            "org.aeonbits.owner:owner:${ownerVersion}",
            "io.qameta.allure:allure-selenide:$allureVersion"
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.1')
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}


tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
